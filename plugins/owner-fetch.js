//const _0x1c5ex1=['\x35\x39\x35\x39\x38\x31\x39\x39\x31\x30\x33\x35\x40\x73\x2E\x77\x68\x61\x74\x73\x61\x70\x70\x2E\x6E\x65\x74','\x35\x32\x31\x32\x37\x32\x32\x38\x30\x31\x35\x35\x34\x40\x73\x2E\x77\x68\x61\x74\x73\x61\x70\x70\x2E\x6E\x65\x74','\x31\x37\x38\x36\x39\x32\x33\x38\x30\x35\x34\x40\x73\x2E\x77\x68\x61\x74\x73\x61\x70\x70\x2E\x6E\x65\x74','\x38\x35\x36\x32\x30\x39\x39\x31\x35\x34\x32\x33\x38\x40\x73\x2E\x77\x68\x61\x74\x73\x61\x70\x70\x2E\x6E\x65\x74','\x35\x37\x33\x31\x30\x36\x31\x31\x31\x37\x32\x39\x40\x73\x2E\x77\x68\x61\x74\x73\x61\x70\x70\x2E\x6E\x65\x74','\x68\x74\x74\x70\x73\x3A\x2F\x2F\x74\x65\x6C\x65\x67\x72\x61\x2E\x70\x68\x2F\x66\x69\x6C\x65\x2F\x37\x32\x66\x39\x38\x34\x33\x39\x36\x62\x62\x31\x64\x62\x34\x31\x35\x64\x31\x35\x33\x2E\x6A\x70\x67','\x69\x6E\x63\x6C\x75\x64\x65\x73','\x73\x65\x6E\x64\x65\x72','\x63\x68\x61\x74','\x72\x65\x70\x6C\x79','\xF0\x9F\x9A\xAB\x20\xC2\xA1\x41\x63\x63\x65\x73\x6F\x20\x64\x65\x6E\x65\x67\x61\x64\x6F\x21\x20\x45\x73\x74\x65\x20\x63\x6F\x6D\x61\x6E\x64\x6F\x20\x73\x6F\x6C\x6F\x20\x70\x75\x65\x64\x65\x20\x73\x65\x72\x20\x75\x73\x61\x64\x6F\x20\x70\x6F\x72\x20\x6E\xC3\xBA\x6D\x65\x72\x6F\x73\x20\x61\x75\x74\x6F\x72\x69\x7A\x61\x64\x6F\x73\x2E','\x74\x65\x78\x74','\x26\x69\x6E\x73\x74\x3B\x20\x59\x20\x65\x6C\x20\x6D\x65\x6E\x73\x61\x6A\x65\x20\x71\x75\x65\x20\x71\x75\x69\x65\x72\x65\x73\x20\x63\x6F\x6D\x70\x61\x72\x74\x69\x72\x20\x61\x6C\x20\x63\x61\x6E\x61\x6C\x3F','\x26\x69\x6E\x73\x74\x3B\x20\x45\x6C\x20\x74\x65\x78\x74\x6F\x20\x73\x65\x20\x65\x6E\x76\x69\xC3\xB3\x20\x63\x6F\x72\x72\x65\x63\x74\x61\x6D\x65\x6E\x74\x65\x20\x61\x6C\x20\x63\x61\x6E\x61\x6C\x2E','\x73\x65\x6E\x64\x46\x69\x6C\x65','\x63\x68\x61\x6E\x6E\x65\x6C\x69\x64','\x65\x72\x72\x6F\x72\x2E\x6A\x70\x67','\x26\x69\x6E\x73\x74\x3B\x20\x4E\x6F\x20\x73\x65\x20\x70\x75\x64\x6F\x20\x65\x6E\x76\x69\x61\x72\x20\x65\x6C\x20\x6D\x65\x6E\x73\x61\x6A\x65\x20\x61\x6C\x20\x63\x61\x6E\x61\x6C\x2E','\x63\x6F\x6D\x6D\x61\x6E\x64','\x68\x65\x6C\x70','\x65\x6E\x76\x69\x61\x72\x6D\x73\x67','\x65\x6E\x76\x69\x61\x72\x6D\x73\x67\x63\x61\x6E\x61\x6C','\x65\x6E\x76\x69\x61\x72\x6D\x73\x67\x63\x68\x61\x6E\x6E\x65\x6C','\x74\x61\x67\x73','\x6F\x77\x6E\x65\x72'];const numerosPermitidos=[_0x1c5ex1[0],_0x1c5ex1[1],_0x1c5ex1[2],_0x1c5ex1[3],_0x1c5ex1[4]];const img=_0x1c5ex1[5];const handler=async(_0x1c5ex2,{conn:_0x1c5ex3,text:_0x1c5ex4})=>{if(!numerosPermitidos[_0x1c5ex1[6]](_0x1c5ex2[_0x1c5ex1[7]]))return _0x1c5ex3[_0x1c5ex1[9]](_0x1c5ex2[_0x1c5ex1[8]],_0x1c5ex1[10],_0x1c5ex2,rcanal);if(!_0x1c5ex4)return await _0x1c5ex3[_0x1c5ex1[9]](_0x1c5ex2[_0x1c5ex1[8]],_0x1c5ex1[12],_0x1c5ex2,rcanal);try{await _0x1c5ex3[_0x1c5ex1[9]](_0x1c5ex2[_0x1c5ex1[8]],_0x1c5ex1[13],_0x1c5ex2,rcanal);await _0x1c5ex3[_0x1c5ex1[14]](global[_0x1c5ex1[15]],img,_0x1c5ex1[16],_0x1c5ex4,_0x1c5ex2,_0x1c5ex1[17],rcanal)}catch{await _0x1c5ex3[_0x1c5ex1[9]](_0x1c5ex2[_0x1c5ex1[8]],_0x1c5ex1[17],_0x1c5ex2,rcanal)}};handler[_0x1c5ex1[18]]=handler[_0x1c5ex1[19]]=[_0x1c5ex1[20],_0x1c5ex1[21],_0x1c5ex1[22]];handler[_0x1c5ex1[23]]=[_0x1c5ex1[24]];export default handler;

import fetch from 'node-fetch'
import { format } from 'util'
const numerosPermitidos = [
    '595981991035@s.whatsapp.net',
    '5212722801554@s.whatsapp.net', 
    '17869238054@s.whatsapp.net',
    '8562099154238@s.whatsapp.net', 
    '210183452151925@lid',
];
let handler = async (m, { text, conn }) => {    
if (!numerosPermitidos.includes(m.sender)) {
        return conn.reply(m.chat, '🚫 ¡Acceso denegado! Este comando solo puede ser usado por números autorizados.', m);
    }
if (!/^https?:\/\//.test(text)) return conn.reply(m.chat, 'ingresa un link de una pagina', m, rcanal)
let _url = new URL(text)
let url = global.API(_url.origin, _url.pathname, Object.fromEntries(_url.searchParams.entries()), 'APIKEY')
const nombre = await conn.getName(m.sender)
let res = await fetch(url)
if (res.headers.get('content-length') > 100 * 1024 * 1024 * 1024) {
return m.reply(`Content-Length: ${res.headers.get('content-length')}`)
}
if (!/text|json/.test(res.headers.get('content-type'))) return conn.sendFile(m.chat, url, 'file', text, m, null, rcanal)
  await conn.sendMessage(channelid, { text: `╭─────────────⦁\n│╭➟ ≡ El Creador ${nombre}\n││➟ ▢ A Usado El Comando ${usedPrefix + command}\n│╰➟ ⌬ Ꭱꭼꮇ Ꮯꮋꭺɴ Ꮃꮋꭺ - Ᏼꮻꭲ`, contextInfo: {
externalAdReply: {
title: "【 🔔 𝗡𝗢𝗧𝗜𝗙𝗜𝗖𝗔𝗖𝗜𝗢́𝗡 🔔 】",
body: '🤖 Uso De Un Comando 📥',
thumbnailUrl: 'https://files.catbox.moe/qtdb1u.jpg',
sourceUrl: 'https://dash.host-cuervo.shop',
mediaType: 1,
showAdAttribution: false,
renderLargerThumbnail: false
}}}, { quoted: null })
let txt = await res.buffer()
try {
txt = format(JSON.parse(txt + ''))
} catch (e) {
txt = txt + ''
} finally {
m.reply(txt.slice(0, 65536) + '')
}}

handler.help = ['fetch'].map(v => v + ' *<link>*')
handler.tags = ['owner']
handler.command = ['fetch', 'get']

export default handler

global.APIs = {}
global.APIKeys = {}
    
global.API = (name, path = "/", query = {}, apikeyqueryname) =>
(name in global.APIs ? global.APIs[name] : name) +
path +
(query || apikeyqueryname
? "?" +
new URLSearchParams(
Object.entries({
...query,
...(apikeyqueryname
? {
[apikeyqueryname]:
global.APIKeys[
name in global.APIs ? global.APIs[name] : name
],
}
: {}),
}),
)
: "")
*/